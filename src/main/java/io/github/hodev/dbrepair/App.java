/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.hodev.dbrepair;

import io.github.hodev.dbrepair.export.DbTableSqlSerialiser;
import org.apache.commons.cli.*;

import java.util.List;

public class App {
    public static void main(String[] args) {
        final Options options = new Options();
        options.addOption(Option
                .builder("d")
                .longOpt("db")
                .numberOfArgs(1)
                .required()
                .build());

        final CommandLineParser parser = new DefaultParser();

        try {
            final CommandLine cmd = parser.parse(options, args);

            if (cmd.hasOption("d")) {
                String dbLocation = cmd.getOptionValue("d");
                System.out.println("Location of db: " + dbLocation);

                final DbReader dbReader = new DbReader();
                List<DbTable> tables = dbReader.readAllTables(dbLocation);

                // Write the SQL files to disk
                final DbTableSqlSerialiser serialiser = new DbTableSqlSerialiser();
                tables.forEach(dbTable -> serialiser.writeAsSql("/tmp", dbTable));

                // TODO Transform values.

                // Write data to database
                dbReader.writeNewDb("/tmp/output", dbLocation);
            }
        } catch (ParseException pe) {
            HelpFormatter formatter = new HelpFormatter();
            formatter.printHelp( "Log messages to sequence diagrams converter", options);
            System.exit(1);
        }
    }
}
